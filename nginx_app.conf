# Proxy download 
location *~ ^/internal_redirect/(.*?)/(.*) {
  # Do not allow people to mess with this location directly
  # Only internal redirects are allowed
#  internal;

  # Location-specific logging
  access_log internal_redirect.access.log main;
  error_log internal_redirect.error.log warn;

  # Extract download url from the request
  
  resolver               8.8.8.8 valid=300s;
  resolver_timeout       10s;
  
  set $download_uri $2;
  set $download_host $1;
  
  set $aws_access_key   'AWSAccessKeyId=$arg_AWSAccessKeyId';
  set $url_expires      'Expires=$arg_Expires';
  set $url_signature    'Signature=$arg_Signature';

  # Compose download url
  set $download_url 'https://$download_host/$download_uri?$aws_access_key&$url_expires&$url_signature';

  # Set download request headers
  proxy_set_header Host $download_host;
  proxy_set_header Authorization '';

  # The next two lines could be used if your storage 
  # backend does not support Content-Disposition 
  # headers used to specify file name browsers use 
  # when save content to the disk
  proxy_hide_header Content-Disposition;
  # add_header Content-Disposition 'attachment; filename="$args"';

  # Do not touch local disks when proxying 
  # content to clients
  proxy_max_temp_file_size 0;

  # Download the file and send it to client
  proxy_pass $download_url;
}

location / {
  # try to serve file directly, fallback to rewrite
  try_files $uri @rewriteapp;
}

location @rewriteapp {
  # rewrite all to index.php
  rewrite ^(.*)$ /index.php/$1 last;
}

location ~ ^/index\.php(/|$) {
  try_files @heroku-fcgi @heroku-fcgi;
  internal;
}
